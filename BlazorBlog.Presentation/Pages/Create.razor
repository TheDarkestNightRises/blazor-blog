@page "/create"
@using BlazorBlog.Shared.Models
@using BlazorBlog.Presentation.Services
@using Microsoft.Extensions.Logging
@inject IBlogService BlogService
@inject NavigationManager _navigationManager 
@using Blazored.TextEditor


<h3>Create a New Blog Post</h3>

<EditForm Model="@newBlogPost" OnValidSubmit="CreateNewBlogPost">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" @bind-Value="newBlogPost.Title" class="form-control"/>
        <ValidationMessage For="@(() => newBlogPost.Title)"/>
    </div>
    <div class="form-group">
        <label for="url">Url</label>
        <InputText id="url" @bind-Value="newBlogPost.Url" class="form-control"/>
        <ValidationMessage For="@(() => newBlogPost.Url)"/>
    </div>
    <div class="form-control-file">
        <label for="image">Image</label>
        <InputFile OnChange="OnFileChange"></InputFile>
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <InputText id="description" @bind-Value="newBlogPost.Description" class="form-control"/>
    </div>
    <div class="form-group">
        <label for="author">Author</label>
        <InputTextArea id="author" @bind-Value="newBlogPost.Author" class="form-control"/>
    </div>
    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" @bind-Value="newBlogPost.DateCreated" class="form-control"/>
    </div>
    <div class="form-check">
        <InputCheckbox id="isPublished" @bind-Value="newBlogPost.IsPublished" class="form-check-input"/>
        <label for="isPublished">Publish</label>
    </div>
    <button type="submit" class="btn btn-primary">Create</button>
        <div class="col-md-8">
    
            <div class="card">
                <div class="card-header">
                    Html Text Editor
                </div>
                <div class="card-body mb-5" style="height:200px;">
                   <!-- Text editor -->
                   <BlazoredTextEditor @ref=QuillHtml Placeholder="write somthing...">
    
                       <ToolbarContent>
                            <select class="ql-header">
                                <option selected=""></option>
                                <option value="1"></option>
                                <option value="2"></option>
                                <option value="3"></option>
                                <option value="4"></option>
                                <option value="5"></option>
                            </select>
                            <span class="ql-formats">
                                <button class="ql-bold"></button>
                                <button class="ql-italic"></button>
                                <button class="ql-underline"></button>
                                <button class="ql-strike"></button>
                            </span>
                            <span class="ql-formats">
                                <select class="ql-color"></select>
                                <select class="ql-background"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-list" value="ordered"></button>
                                <button class="ql-list" value="bullet"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-link"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-video"></button>
                            </span>
    
                       </ToolbarContent>
    
                   </BlazoredTextEditor>
    
                </div>
                <div class="card-footer">
                    <button type="button" class="btn btn-success" @onclick=@(async ()=> await ShowAoutPutPreview() )>Show OutPut</button>
                </div>
            </div>
            <!-- Preview card -->
            <div class="card">
                <div class="card-header">
                    the preview Of html editor
                </div>
                <div class="card-body">
                    @preview
                </div>
            </div>
    
        </div>
    <ValidationSummary/>
</EditForm>


@code {
    private BlazoredTextEditor QuillHtml;
    private MarkupString preview;
    private BlogPost newBlogPost = new();

    async Task CreateNewBlogPost()
    {
        newBlogPost.Content = await QuillHtml.GetHTML();
        var result = await BlogService.CreateNewBlogPost(newBlogPost);
        _navigationManager.NavigateTo($"posts/{result.Url}");
    }

    private async Task ShowAoutPutPreview()
    {
        if (!string.IsNullOrWhiteSpace(await QuillHtml.GetText()))
        {
            preview = (MarkupString)await QuillHtml.GetHTML();
        }

    }

    async Task OnFileChange(InputFileChangeEventArgs e)
    {
        var format = "image/png";
        var resizedImage = await e.File.RequestImageFileAsync(format, 300, 300);
        var buffer = new byte[resizedImage.Size];
        await resizedImage.OpenReadStream().ReadAsync(buffer);
        var imageData = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
        newBlogPost.Image = imageData;
    }



}